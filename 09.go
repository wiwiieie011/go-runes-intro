package main

import (
	"fmt"
	"strings"
	"unicode"
)

func main() {

fmt.Println(CleanPassword("–ø–∞—Ä–æ–ª—åüôÇ "))

}

// –ó–∞–¥–∞—á–∞ 9. –û—á–∏—Å—Ç–∫–∞ –ø–∞—Ä–æ–ª—è
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ø–∞—Ä–æ–ª—å. –ù—É–∂–Ω–æ:
// –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã (–∏—Å–ø–æ–ª—å–∑—É–π unicode.IsSpace).
// –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –Ω–µ–ø–µ—á–∞—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã. (–∏—Å–ø–æ–ª—å–∑—É–π unicode.IsControl().
// –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.
// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ä—É–Ω—ã –∫–∞–∫ –µ—Å—Ç—å (–≤ —Ç.—á. —ç–º–æ–¥–∑–∏, –∫–∏—Ä–∏–ª–ª–∏—Ü—É, –∑–Ω–∞–∫–∏).
// –§—É–Ω–∫—Ü–∏—è CleanPassword(s string) string. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç string –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∞–∫–∂–µ string.

func CleanPassword(s string) string {
	b:= ""
	for _, v := range s {
		if  unicode.IsSpace(v) == false &&unicode.IsControl(v) == false{
				b += string(v) 
		}
	}
	c:= strings.ToUpper(b)
	return  c
}